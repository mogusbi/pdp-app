version: 2

jobs:
  init:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - pdp-dependencies-{{ checksum "package.json" }}
            - pdp-dependencies-
      - run:
          command: npm i
          name: Install dependencies
      - save_cache:
          key: pdp-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          command: npm run lint
          name: Lint code

  unit-test:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - pdp-dependencies-{{ checksum "package.json" }}
            - pdp-dependencies-
      - run:
          command: npm run test
          name: Unit tests

  integration-test:
    docker:
      - image: circleci/node:8.10.0
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: sage
          MYSQL_PASSWORD: password
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - pdp-dependencies-{{ checksum "package.json" }}
            - pdp-dependencies-
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-client
          name: Install MySQL client
      - run:
          command: |
            mysql -h 127.0.0.1 -u root -ppassword < setup/mysql/init-test-db.sql
          name: Set up database
      - run:
          command: npm run e2e
          name: Integration tests

  build:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - pdp-dependencies-{{ checksum "package.json" }}
            - pdp-dependencies-
      - run:
          command: npm run build
          name: Build application
      - setup_remote_docker
      - run:
          name: Set convenience environment variables
          command: |
            echo 'export FULL_CONTAINER_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          command: docker build -t $FULL_CONTAINER_NAME .
          name: Build container
      - run:
          name: Archive container
          command: |
            mkdir containers
            docker save -o containers/app.tar $FULL_CONTAINER_NAME
      - persist_to_workspace:
          root: .
          paths:
            - containers

workflows:
  version: 2

  build-deploy:
    jobs:
      - init
      - unit-test:
          requires:
            - init
      - integration-test:
          requires:
            - init
      - build:
          requires:
            - unit-test
            - integration-test
